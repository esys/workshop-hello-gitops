name: Go

on:
  push:
    branches: [ '*' ]

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    
    steps:
    - name: Set up Go 1.x
      uses: actions/setup-go@v2
      with:
        go-version: ^1.14
      
    - name: Check out code
      uses: actions/checkout@v2
    
    - name: Check Path
      run: echo $PATH 

  lint:
    name: lint
    runs-on: ubuntu-latest
    needs: build
    steps:
    - name: Check out code
      uses: actions/checkout@v2
    - name: Lint Code Base
      uses: github/super-linter@v4
      env:
        DEFAULT_BRANCH: master
        VALIDATE_KUBERNETES_KUBEVAL: false
          #  VALIDATE_JSCPD: false
        VALIDATE_MARKDOWN: false
        VALIDATE_GO: false
        GITHUB_TOKEN: ${{secrets.secret_token}}
        SHELLCHECK_OPTS: "-e SC2086,-e SC2046"
  
          # GOENV: "/home/runner/.config/go/env"
          # GOROOT: "/opt/hostedtoolcache/go/1.16.7/x64"

    # - name: lint
    #   uses: golangci/golangci-lint-action@v2
    #   with:
    #     skip-go-installation: true
    #     github-token: ${{secrets.secret_token}}
    #     only-new-issues: false
    #     skip-pkg-cache: true
    #     skip-build-cache: true

  push:
    name: push
    runs-on: ubuntu-latest
    needs: [build,lint]
    steps:
    # - name: Import Secrets
    #   uses: hashicorp/vault-action@v2.3.0
    #   with:
    #     url: https://vault-cluster.vault.52a7c979-da4b-40f2-94d6-7d4c5ead3d3a.aws.hashicorp.cloud:8200
    #     token: ${{ secrets.VAULT_TOKEN }}
    #     #path: vmware-demo
    #     secrets: |
    #       secret/vmware-demo/docker-registry DOCKER_USERNAME | DOCKER_USERNAME ;
    #       secret/vmware-demo/docker-registry DOCKER_PASSWORD | DOCKER_PASSWORD ;
    #     tlsSkipVerify: true

          
         
    - name: Check out code
      uses: actions/checkout@v2 
    - name: Install dependencies
      uses: asdf-vm/actions/install@v1
    - name: Import Docker registry creds from Vault
      id: creds
      env:
        VAULT_ADDR: https://vault-cluster.vault.52a7c979-da4b-40f2-94d6-7d4c5ead3d3a.aws.hashicorp.cloud:8200
        VAULT_TOKEN: ${{ secrets.VAULT_TOKEN }}
      run: |
        echo ::set-output name=DOCKER_PASSWORD::$(curl -X 'GET' \
        '${{ env.VAULT_ADDR }}/v1/vmware-demo/docker-registry' \
        -H 'accept: */*' \
        -H 'X-Vault-Token: ${{ env.VAULT_TOKEN }}' \
        -H 'X-Vault-Namespace: admin' | jq -r .data.DOCKER_PASSWORD)
        echo ::set-output name=DOCKER_USERNAME::$(curl -X 'GET' \
        '${{ env.VAULT_ADDR }}/v1/vmware-demo/docker-registry' \
        -H 'accept: */*' \
        -H 'X-Vault-Token: ${{ env.VAULT_TOKEN }}' \
        -H 'X-Vault-Namespace: admin' | jq -r .data.DOCKER_USERNAME)
    - name: Get docker username
      run: |
        echo "docker username  is ${{steps.creds.outputs.DOCKER_USERNAME}}" 

    - name: Build and push Docker image
      uses: docker/build-push-action@v1.1.0
      with:
        username: ${{ steps.creds.outputs.DOCKER_USERNAME }}
        password: ${{ steps.creds.outputs.DOCKER_PASSWORD }}
        repository: ${{ steps.creds.outputs.DOCKER_USERNAME }}/hello-gitops
        tags: ${{ github.sha }}, latest

  deploy:
    

        
    name: Deploy
    runs-on: ubuntu-latest
    needs: [build,lint,push]

    steps:
  

    - name: Check out code
      uses: actions/checkout@v2
    
    # - name: Run Checkov scan
    #   id: checkov
    #   uses: bridgecrewio/checkov-action@master
    #   with:
    #     directory: kustomize/base
    #     skip_check: CKV_K8S_21
    #   if: ${{ github.ref != 'refs/heads/master' }}
      

    - name: Setup Kustomize
      uses: imranismail/setup-kustomize@v1
      with:
        kustomize-version: "3.6.1"

    - name: Update Kubernetes resources
      env:
        DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
      run: |
       cd kustomize/base
       kustomize edit set image hello-gitops=$DOCKER_USERNAME/hello-gitops:$GITHUB_SHA
       cat kustomization.yaml
       sed -i "s/__NAME__/development/" kustomization.yaml

        
    - name: Commit files
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        git commit -am "Bump docker tag"
      

    - name: Push changes
      uses: ad-m/github-push-action@master
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        branch: ${{ github.ref }}
      if: ${{ github.ref != 'refs/heads/master' }}
####If all the above steps complete deploy to main

  deploy-prod:
    name: Deploy to Production
    runs-on: ubuntu-latest
    needs: deploy
    if: ${{ github.ref == 'refs/heads/master' }}
    steps:
      - name: Checkout Code
        uses: actions/checkout@v2
      # - name: Run Checkov scan
      #   id: checkov
      #   uses: bridgecrewio/checkov-action@master
      #   with:
      #     directory: kustomize/base
      - name: Update Kubernetes resources
        env:
          DOCKER_USERNAME: pkatira7
        run: |
            cd kustomize/base
            kustomize edit set image hello-gitops=${{env.DOCKER_USERNAME}}/hello-gitops:$GITHUB_SHA
            cat kustomization.yaml
            sed -i "s/development/production/" kustomization.yaml

   
      - name: Commit files
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git commit -am "Bump docker tag $GITHUB_SHA"

      - name: Push changes
        uses: ad-m/github-push-action@master
        with:
           github_token: ${{ secrets.GITHUB_TOKEN }}
           branch: ${{ github.ref }}
    

